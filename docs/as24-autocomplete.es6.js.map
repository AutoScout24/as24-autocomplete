{"version":3,"file":"as24-autocomplete.es6.js","sources":["../src/as24-autocomplete-input.js","../src/data-sources/tags-data-source.js","../src/as24-autocomplete.js"],"sourcesContent":["/**\n * @class DOMEvent\n * @property {HTMLElement} target\n * @property {number} which\n * @property {function} stopPropagation\n * @property {function} preventDefault\n */\n\n\n\n/**\n * @callback fetchItemsFn\n * @param {string} userInput\n * @return {Promise}\n */\n\n\n\n/**\n * Finds a closest element by class name\n * @param {string} className\n * @returns {function}\n */\nconst closestByClassName = className =>\n    /**\n     * @param {HTMLElement} elem\n     * @return {HTMLElement|null}\n     */\n    elem => {\n        if (elem === null) {\n            return null;\n        } else {\n            return elem.classList.contains(className)\n                ? elem\n                : closestByClassName(className)(elem.parentElement);\n        }\n    };\n\n\n\n/**\n * Checks whether elem has tag as a parent\n * @param {HTMLElement} tag\n * @returns {function}\n */\nconst closestByTag = tag =>\n    /**\n     * @param {HTMLElement} elem\n     * @return {HTMLElement|null}\n     */\n    elem =>\n        elem === null\n            ? null\n            : (elem === tag)\n                ? tag\n                : closestByTag(tag)(elem.parentNode);\n\n\n\n/**\n * Selects an element using the root element.\n * @param {string} selector Specifies the selector for lookup\n * @param {Element} root Specified within which element to perform the lookup\n * @return {Element}\n */\nconst $ = (selector, root) =>\n    root.querySelector(selector);\n\n\n\n/**\n * Binds an event listener on the element\n * @param {string} event\n * @param {Function} cb\n * @param {Element|Window|Document} el\n * @param {boolean} capturing\n */\nconst on = (event, cb, el, capturing = false) =>\n    el.addEventListener(event, cb, capturing);\n\n\n\n/**\n * Appends a child element to a target element\n * @param {HTMLElement|DocumentFragment} target\n * @returns {function}\n */\nconst appendTo = target =>\n    /**\n     * @param {HTMLElement} child\n     * @return {HTMLElement}\n     */\n    child => {\n        target.appendChild(child);\n        return target;\n    };\n\n\n\n/**\n* Finds the currently selected suggestion item\n* @param {HTMLUListElement} list\n* @returns {HTMLLIElement}\n*/\nconst getSelectedSuggestionItem = list =>\n    $('.as24-autocomplete__list-item--selected', list);\n\n\n\n/**\n*\n* @param {HTMLElement} list\n* @param {HTMLElement} selected\n*/\nconst followSelectedItem = (list, selected) => {\n    const listHeight = list.getBoundingClientRect().height;\n    const selectedTop = selected.offsetTop;\n    const selectedHeight = selected.offsetHeight;\n    list.scrollTop = -1 * (listHeight - (selectedTop + selectedHeight));\n};\n\n\n\n/**\n * Selected next/prev suggestion item\n * @param {number} dir\n * @param {HTMLUListElement} list\n * @return {boolean}\n */\nconst moveSelection = (dir, list) => {\n    const next = dir === 1 ? 'nextSibling' : 'previousSibling';\n    const currActiveItem = getSelectedSuggestionItem(list);\n    const nextActiveItem = currActiveItem === null\n        ? $('.as24-autocomplete__list-item', list)\n        : currActiveItem[next] !== null\n            ? currActiveItem[next]\n            : currActiveItem;\n    if (currActiveItem) {\n        currActiveItem.classList.remove('as24-autocomplete__list-item--selected');\n    }\n    nextActiveItem.classList.add('as24-autocomplete__list-item--selected');\n    followSelectedItem(list, nextActiveItem);\n    return false;\n};\n\n\n\n/**\n * Shows the suggestions list\n * @param {HTMLUListElement} list\n * @return {boolean}\n */\nconst showList = list => {\n    list.classList.add('as24-autocomplete__list--visible');\n    moveSelection(1, list);\n    return false;\n};\n\n\n\n/**\n * Hides the list and deactivates the root element\n * @param {HTMLUListElement} list\n * @param {Element} rootElement\n */\nconst hideList = (list, rootElement) => () => {\n    rootElement.classList.remove('as24-autocomplete--active');\n    list.classList.remove('as24-autocomplete__list--visible');\n    return false;\n};\n\n\n\n/**\n * Checks whether the list is visisible\n * @param {Element} list\n */\nconst isListVisible = list =>\n    list.classList.contains('as24-autocomplete__list--visible');\n\n\n\n/**\n * When user clicks cross icon, all the input must be removed\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLElement} rootElement\n * @return {*}\n */\nconst cleanup = (valueInput, userFacingInput, rootElement) => {\n    valueInput.value = '';\n    userFacingInput.value = '';\n    rootElement.isDirty = false;\n    rootElement.classList.remove('as24-autocomplete--user-input');\n};\n\n\n\n/**\n * When user types something in we mark the component as dirty\n * @param {Element} rootElement\n * @return {*}\n */\nconst dirtifyInput = (rootElement) => {\n    rootElement.isDirty = true;\n    rootElement.classList.add('as24-autocomplete--user-input');\n};\n\n\n\n/**\n * Renders a li item for the suggestions list\n * @param {string} searchStr\n * @returns {function}\n */\nconst renderLI = searchStr =>\n    /**\n     * @param {Suggestion} item\n     * @returns {HTMLLIElement}\n     */\n    item => {\n        const li = document.createElement('li');\n        const escapedSearchStr = searchStr.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n        li.classList.add('as24-autocomplete__list-item');\n        li.dataset.key = item.key;\n        li.innerHTML = item.value.replace(new RegExp(`(${escapedSearchStr})`, 'ig'), '<strong>$1</strong>');\n        return li;\n    };\n\n\n\n/**\n * What to render when there is nothing to suggest\n * @param {String} emptyMessage\n * @returns {HTMLLIElement}\n */\nconst renderEmptyListItem = emptyMessage => {\n    /**\n     * @type {HTMLLIElement}\n     */\n    const li = document.createElement('li');\n    li.dataset.unselectable = true;\n    ['as24-autocomplete__list-item', 'as24-autocomplete__list-item--empty'].forEach(li.classList.add.bind(li.classList));\n    li.dataset.key = '';\n    li.innerText = emptyMessage;\n    return li;\n};\n\n\n\n/**\n * Renders a collection of raw suggestions to the list\n * @param {string} emptyMessage\n * @param {HTMLUListElement} list\n * @param {HTMLInputElement} userFacingInput\n * @returns {Function}\n */\nconst renderList = (emptyMessage, list, userFacingInput) =>\n    /**\n     * @param {Array<Suggestion>} suggestions\n     */\n    suggestions => {\n        list.innerHTML = '';\n        const df = document.createDocumentFragment();\n\n        (suggestions.length\n            ? suggestions.map(renderLI(userFacingInput.value))\n            : [renderEmptyListItem(emptyMessage)]\n        ).forEach(appendTo(df));\n\n        appendTo(list)(df);\n        showList(list);\n    };\n\n\n\n/**\n * Fetch data according to user input and renders the list\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLUListElement} list\n * @param {String} emptyMessage\n * @param {Element} rootElement\n * @returns {function}\n */\nconst fetchList = (dataSource, userFacingInput, list, emptyMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        e.stopPropagation();\n        rootElement.classList.add('as24-autocomplete--active');\n        dataSource.fetchItems(userFacingInput.value).then(renderList(emptyMessage, list, userFacingInput));\n    };\n\n\n/**\n *\n * @param {string} eventName\n * @param {HTMLInputElement} el\n */\nconst triggerChangeEvent = (eventName, el) => {\n    const evt = document.createEvent('Event');\n    evt.initEvent(eventName, true, true);\n    el.dispatchEvent(evt);\n};\n\n\n/**\n * This is what happens after the user selected an item\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLLIElement} li\n * @param {Element} rootElement\n */\nconst selectItem = (valueInput, userFacingInput, li, rootElement) => {\n    valueInput.value = li.dataset.key;\n    userFacingInput.value = li.innerText;\n    triggerChangeEvent('change', valueInput);\n    dirtifyInput(rootElement);\n};\n\n\n\n/**\n * When mouse goes over the suggestion item\n * @param {HTMLUListElement} list\n * @return {function} a function that accepts an event\n */\nconst onItemMouseOver = list =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        e.stopPropagation();\n        const preselected = $('.as24-autocomplete__list-item--preselected', list);\n        if (e.target.tagName === 'LI') {\n            if (preselected) {\n                preselected.classList.remove('as24-autocomplete__list-item--preselected');\n            }\n            e.target.classList.add('as24-autocomplete__list-item--preselected');\n        }\n    };\n\n\n\n/**\n * Handles key down event from the label input\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLUListElement} list\n * @param {string} emptyListMessage\n * @param {Element} rootElement\n * @return {function}\n */\nconst onKeyDown = (dataSource, valueInput, userFacingInput, list, emptyListMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        if (e.target === userFacingInput) {\n            if ([38, 40, 27].indexOf(e.which) >= 0) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            if (e.which === 9) {\n                if (isListVisible(list)) {\n                    selectItem(valueInput, userFacingInput,\n                        getSelectedSuggestionItem(list),\n                        rootElement\n                    );\n                    hideList(list, rootElement)(e);\n                }\n            }\n            if (e.which === 38) {\n                return moveSelection(-1, list);\n            }\n            if (e.which === 40) {\n                return isListVisible(list)\n                    ? moveSelection(1, list)\n                    : fetchList(dataSource, userFacingInput, list,\n                        emptyListMessage, rootElement)(e);\n            }\n            if (e.which === 27) {\n                cleanup(valueInput, userFacingInput, rootElement);\n                return hideList(list, rootElement)();\n            }\n        }\n        return null;\n    };\n\n\n\n/**\n * Handles key up event from the label input\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLUListElement} list\n * @param {string} emptyListMessage\n * @param {Element} rootElement\n * @return {function}\n */\nconst onKeyUp = (dataSource, valueInput, userFacingInput, list, emptyListMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {*}\n     */\n    e => {\n        if (userFacingInput.value) {\n            dirtifyInput(rootElement);\n        } else {\n            cleanup(valueInput, userFacingInput, rootElement);\n        }\n        if (isListVisible(list) && (e.which === 13 || e.which === 9)) {\n            e.stopPropagation();\n            e.preventDefault();\n            selectItem(valueInput, userFacingInput, getSelectedSuggestionItem(list), rootElement);\n            hideList(list, rootElement)();\n            return false;\n        }\n        if ([38, 40, 27].indexOf(e.which) === -1) {\n            e.stopPropagation();\n            return fetchList(dataSource, userFacingInput, list, emptyListMessage, rootElement)(e);\n        }\n        return null;\n    };\n\n\n\n/**\n * Reset the state of the component\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLElement} root\n */\nconst reset = (valueInput, userFacingInput, root) => {\n    cleanup(valueInput, userFacingInput, root);\n    triggerChangeEvent('change', valueInput);\n    return true;\n};\n\n\n\n/**\n * Returns promised Suggestion by key\n * @param  {DataSource} dataSource\n * @param  {string} keyValue\n * @return {Promise.<Suggestion>}\n */\nconst getInitialValueByKey = (dataSource, keyValue) =>\n    dataSource.getSuggestionByKey(keyValue);\n\n\n/**\n * Handles click on the component\n * @param {function} fetchListFn\n * @param {HTMLInputElement} userFacingInput\n * @param {HTMLInputElement} valueInput\n * @param {HTMLUListElement} list\n * @param {HTMLElement} rootElement\n */\nconst componentClicked = (fetchListFn, userFacingInput, valueInput, list, rootElement) => (e) => {\n    const isInput = closestByClassName('as24-autocomplete__input')(e.target);\n    const isIcon = closestByClassName('as24-autocomplete__icon-wrapper')(e.target);\n    const isList = closestByClassName('as24-autocomplete__list')(e.target);\n    if (closestByTag(rootElement)(e.target) === rootElement) {\n        if (isInput) {\n            fetchListFn(e);\n        }\n        else if (isIcon) {\n            if (!userFacingInput.disabled) {\n                if (rootElement.isDirty) {\n                    reset(valueInput, userFacingInput, rootElement);\n                    if (isListVisible(list)) {\n                        fetchListFn(e);\n                        userFacingInput.focus();\n                    }\n                    return;\n                }\n                if (isListVisible(list)) {\n                    hideList(list, rootElement)(e);\n                } else {\n                    userFacingInput.focus();\n                    fetchListFn(e);\n                }\n            }\n        }\n        else if (isList) {\n            const theItem = closestByClassName('as24-autocomplete__list-item')(e.target);\n            if (theItem.dataset.unselectable) {\n                e.stopPropagation();\n                return;\n            }\n            selectItem(valueInput, userFacingInput, theItem, rootElement);\n            rootElement.classList.add('as24-autocomplete--user-input');\n            hideList(list, rootElement)(e);\n        }\n    } else {\n        hideList(list, rootElement)(e);\n    }\n};\n\n\n\n/**\n * When the custom tag has been attached to DOM\n * @this HTMLElement\n */\nfunction elementAttached() {\n    /**\n     * The as24-autocomplete DOM element\n     * @type {HTMLElement}\n     */\n    const root = this;\n\n    /**\n     * The message about no items has been found\n     * @type {string}\n     */\n    const emptyListMessage = root.getAttribute('empty-list-message') || '---';\n\n    /**\n     * The input with which the user can interact\n     * @type {HTMLInputElement}\n     */\n    const userFacingInput = $('[type=text]', root);\n\n    /**\n     * Hidden input in which we actually set the value\n     * @type {HTMLInputElement}\n     */\n    const valueInput = $('[type=hidden]', root);\n\n    /**\n     * The UL-element that represents the suggestion list\n     * @type {HTMLUListElement}\n     */\n    const list = $('.as24-autocomplete__list', root);\n\n    /**\n     * DataSource element\n     * @type {DataSource}\n     */\n    const dataSource = this.querySelector('[role=data-source]');\n\n    if (!dataSource) {\n        throw new Error('The DataSource has not been found');\n    }\n\n    /**\n     * The function that takes an Event and does call to DataSource\n     * @type {Function}\n     */\n    const fetchListFn = fetchList(dataSource, userFacingInput, list, emptyListMessage, root);\n\n    root.isDirty = false;\n\n    setTimeout(() => {\n        if (valueInput.value) {\n            getInitialValueByKey(dataSource, valueInput.value)\n                .then(suggestion => {\n                    if (suggestion) {\n                        userFacingInput.value = suggestion.value;\n                        dirtifyInput(root);\n                    }\n                    return true;\n                });\n        }\n    });\n\n    on('click', componentClicked(fetchListFn, userFacingInput, valueInput, list, root), document);\n    on('keyup', onKeyUp(dataSource, valueInput, userFacingInput, list, emptyListMessage, root), userFacingInput, true);\n    on('keydown', onKeyDown(dataSource, valueInput, userFacingInput, list, emptyListMessage, root), window, true);\n    on('mouseover', onItemMouseOver(list), list, true);\n}\n\n\n\nfunction elementDetached() { }\n\n/**\n * @this {HTMLElement}\n * @param {string} attrName\n * @param {string} oldVal\n * @param {string} newVal\n */\nfunction onAttributeChanged(attrName, oldVal, newVal) {\n    /** @type {HTMLInputElement} */\n    const userFacingInput = $('[type=text]', this);\n\n    /** @type {HTMLUListElement} */\n    const list = $('.as24-autocomplete__list', this);\n\n    if (attrName === 'disabled') {\n        userFacingInput.disabled = newVal === 'true' || newVal === 'disabled';\n        this.classList[userFacingInput.disabled ? 'add' : 'remove']('as24-autocomplete--disabled');\n        hideList(list, this)();\n    }\n}\n\nexport default function() {\n    try {\n        return document.registerElement('as24-autocomplete', {\n            prototype: Object.assign(\n                Object.create(HTMLElement.prototype, {\n                    attachedCallback: { value: elementAttached },\n                    detachedCallback: { value: elementDetached },\n                    attributeChangedCallback: { value: onAttributeChanged }\n                }),\n                /**\n                 * Public API\n                 */\n                {\n                    /**\n                     * Returns the selected value\n                     * @this {HTMLElement}\n                     */\n                    selectedValue() {\n                        return $('[type=hidden]', this).value;\n                    },\n                    /**\n                     * Returns what user has written\n                     * @this {HTMLElement}\n                     */\n                    userQuery() {\n                        return $('[type=text]', this).value;\n                    },\n                    /**\n                     * returns the bounded data source element\n                     * @this {HTMLElement}\n                     */\n                    dataSourceElement() {\n                        return this.querySelector('[role=data-source]');\n                    },\n                    /**\n                     * Resets the component\n                     * @this {HTMLElement}\n                     */\n                    reset() {\n                        /** @type {HTMLInputElement} */\n                        const userFacingInput = $('[type=text]', this);\n\n                        /** @type {HTMLInputElement} */\n                        const valueInput = $('[type=hidden]', this);\n\n                        return reset(valueInput, userFacingInput, this);\n                    }\n                }\n            )\n        });\n    } catch (e) {\n        if (window && window.console) {\n            window.console.warn('Failed to register CustomElement \"as24-autocomplete\".', e);\n            return null;\n        }\n    }\n    return true;\n}\n","/**\n * @class\n * @typedef Suggestion\n */\nclass Suggestion {\n    /**\n     * @property {string} key\n     * @property {string} value\n     */\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n\n    toString() {\n        return `Suggestion(${this.key}: ${this.value})`;\n    }\n}\n\n/**\n * Test the string against item's value\\\n * @param {RegExp} regexp\n * @returns {function}\n */\nconst valuePredicate = (regexp) =>\n    /**\n     * @param {Suggestion} item\n     */\n    item =>\n        item.value.match(regexp) !== null;\n\n\n/**\n * @class\n * @typedef DataSource\n */\nclass DataSource extends HTMLElement {\n    /**\n     * @param {string} queryString\n     * @return {Promise.<Array<Suggestion>>}\n     */\n    fetchItems(queryString) {\n        return new Promise(res => {\n            const keyVals = this.extractKeyValues();\n            const escapedQueryString = queryString.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n            const startingWith = keyVals\n                .filter(valuePredicate(new RegExp(`^${escapedQueryString}`, 'ig')));\n            const theRestContaining = keyVals\n                .filter(x => startingWith.indexOf(x) === -1)\n                .filter(valuePredicate(new RegExp(`${escapedQueryString}`, 'ig')));\n            return res(startingWith.concat(theRestContaining));\n        });\n    }\n\n    /**\n     * @param {string} keyValue\n     * @return {Promise.<Suggestion>}\n     */\n    getSuggestionByKey(keyValue) {\n        return new Promise((res, rej) => {\n            const items = this.extractKeyValues();\n            if (keyValue && items) {\n                return res(items.filter(item => item.key === keyValue)[0]);\n            }\n            return rej(null);\n        });\n    }\n\n    /**\n     * Extracts a list of objects like { key:string, value:string }\n     * @returns {Array<{key:string, value:string}>}\n     */\n    extractKeyValues() {\n        return Array.prototype.slice.call(this.querySelectorAll('item')).map(tag =>\n            new Suggestion(tag.getAttribute('key'), tag.getAttribute('value'))\n        );\n    }\n}\n\nexport default function() {\n    try {\n        return document.registerElement('as24-tags-data-source', DataSource);\n    } catch (e) {\n        return null;\n    }\n}\n","import input from './as24-autocomplete-input';\nimport tagsDataSource from './data-sources/tags-data-source';\n\nexport default (function init() {\n    const inputCtr = input();\n    const tagsDataSourceCtr = tagsDataSource();\n    return { inputCtr, tagsDataSourceCtr };\n}());\n"],"names":["closestByClassName","elem","classList","contains","className","parentElement","closestByTag","tag","parentNode","$","selector","root","querySelector","on","event","cb","el","capturing","addEventListener","appendTo","appendChild","child","target","getSelectedSuggestionItem","list","followSelectedItem","selected","listHeight","getBoundingClientRect","height","selectedTop","offsetTop","selectedHeight","offsetHeight","scrollTop","moveSelection","dir","next","currActiveItem","nextActiveItem","remove","add","showList","hideList","rootElement","isListVisible","cleanup","valueInput","userFacingInput","value","isDirty","dirtifyInput","renderLI","li","document","createElement","escapedSearchStr","searchStr","replace","dataset","key","item","innerHTML","RegExp","renderEmptyListItem","unselectable","forEach","bind","innerText","emptyMessage","renderList","df","createDocumentFragment","suggestions","length","map","fetchList","dataSource","stopPropagation","fetchItems","then","triggerChangeEvent","eventName","evt","createEvent","initEvent","dispatchEvent","selectItem","onItemMouseOver","preselected","e","tagName","onKeyDown","emptyListMessage","indexOf","which","preventDefault","onKeyUp","reset","getInitialValueByKey","keyValue","getSuggestionByKey","componentClicked","fetchListFn","isInput","isIcon","isList","disabled","focus","theItem","elementAttached","getAttribute","Error","suggestion","window","elementDetached","onAttributeChanged","attrName","oldVal","newVal","registerElement","Object","assign","create","HTMLElement","prototype","console","warn","Suggestion","valuePredicate","regexp","match","DataSource","queryString","Promise","keyVals","extractKeyValues","escapedQueryString","startingWith","filter","theRestContaining","x","res","concat","rej","items","Array","slice","call","querySelectorAll","init","inputCtr","input","tagsDataSourceCtr","tagsDataSource"],"mappings":"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"}