{"version":3,"file":"as24-autocomplete.js","sources":["../src/as24-autocomplete-input.js","../src/data-sources/tags-data-source.js","../src/as24-autocomplete.js"],"sourcesContent":["/**\n * @class DOMEvent\n * @property {HTMLElement} target\n * @property {number} which\n * @property {function} stopPropagation\n * @property {function} preventDefault\n */\n\n\n\n/**\n * @callback fetchItemsFn\n * @param {string} userInput\n * @return {Promise}\n */\n\n\n\n/**\n * Finds a closest element by class name\n * @param className\n * @returns {function}\n */\nconst closestByClassName = className =>\n    /**\n     * @param {HTMLElement} elem\n     * @return {HTMLElement}\n     */\n    elem =>\n        elem.classList.contains(className)\n            ? elem\n            : closestByClassName(className)(elem.parentElement);\n\n\n\n/**\n * Selects an element using the root element.\n * @param {string} selector Specifies the selector for lookup\n * @param {Element} root Specified within which element to perform the lookup\n * @return {Element}\n */\nconst $ = (selector, root) =>\n    root.querySelector(selector);\n\n\n\n/**\n * Binds an event listener on the element\n * @param {string} event\n * @param {Function} cb\n * @param {Element|Window|Document} el\n * @param {boolean} capturing\n */\nconst on = (event, cb, el, capturing = false) =>\n    el.addEventListener(event, cb, capturing);\n\n\n\n/**\n * Appends a child element to a target element\n * @param {HTMLElement|DocumentFragment} target\n * @returns {function}\n */\nconst appendTo = target =>\n    /**\n     * @param {HTMLElement} child\n     * @return {HTMLElement}\n     */\n    child => {\n        target.appendChild(child);\n        return target;\n    };\n\n\n\n/**\n* Finds the currently selected suggestion item\n* @param {HTMLUListElement} list\n* @returns {HTMLLIElement}\n*/\nconst getSelectedSuggestionItem = list =>\n    $('.as24-autocomplete__list-item--selected', list);\n\n\n\n/**\n*\n* @param {HTMLElement} list\n* @param {HTMLElement} selected\n*/\nconst followSelectedItem = (list, selected) => {\n    const listHeight = list.getBoundingClientRect().height;\n    const selectedTop = selected.offsetTop;\n    const selectedHeight = selected.offsetHeight;\n    list.scrollTop = -1 * (listHeight - (selectedTop + selectedHeight));\n};\n\n\n\n/**\n * Selected next/prev suggestion item\n * @param {number} dir\n * @param {HTMLUListElement} list\n * @return {boolean}\n */\nconst moveSelection = (dir, list) => {\n    const next = dir === 1 ? 'nextSibling' : 'previousSibling';\n    const currActiveItem = getSelectedSuggestionItem(list);\n    const nextActiveItem = currActiveItem === null\n        ? $('.as24-autocomplete__list-item', list)\n        : currActiveItem[next] !== null\n            ? currActiveItem[next]\n            : currActiveItem;\n    if (currActiveItem) {\n        currActiveItem.classList.remove('as24-autocomplete__list-item--selected');\n    }\n    nextActiveItem.classList.add('as24-autocomplete__list-item--selected');\n    followSelectedItem(list, nextActiveItem);\n    return false;\n};\n\n\n\n/**\n * Shows the suggestions list\n * @param {HTMLUListElement} list\n * @return {boolean}\n */\nconst showList = list => {\n    list.classList.add('as24-autocomplete__list--visible');\n    moveSelection(1, list);\n    return false;\n};\n\n\n\n/**\n * Hides the list and deactivates the root element\n * @param {HTMLUListElement} list\n * @param {Element} rootElement\n */\nconst hideList = (list, rootElement) => () => {\n    rootElement.classList.remove('as24-autocomplete--active');\n    list.classList.remove('as24-autocomplete__list--visible');\n    return false;\n};\n\n\n\n/**\n * Checks whether the list is visisible\n * @param {Element} list\n */\nconst isListVisible = list =>\n    list.classList.contains('as24-autocomplete__list--visible');\n\n\n\n/**\n * When user clicks cross icon, all the input must be removed\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLElement} rootElement\n * @return {*}\n */\nconst cleanup = (valueInput, labelInput, rootElement) => {\n    valueInput.value = '';\n    labelInput.value = '';\n    rootElement.isDirty = false;\n    rootElement.classList.remove('as24-autocomplete--user-input');\n};\n\n\n\n/**\n * When user types something in we mark the component as dirty\n * @param {Element} rootElement\n * @return {*}\n */\nconst dirtifyInput = (rootElement) => {\n    rootElement.isDirty = true;\n    rootElement.classList.add('as24-autocomplete--user-input');\n};\n\n\n\n/**\n * Renders a li item for the suggestions list\n * @param {string} searchStr\n * @returns {function}\n */\nconst renderLI = searchStr =>\n    /**\n     * @param {Suggestion} item\n     * @returns {HTMLLIElement}\n     */\n    item => {\n        const li = document.createElement('li');\n        li.classList.add('as24-autocomplete__list-item');\n        li.dataset.key = item.key;\n        li.innerHTML = item.value.replace(new RegExp(`(${searchStr})`, 'ig'), '<strong>$1</strong>');\n        return li;\n    };\n\n\n\n/**\n * What to render when there is nothing to suggest\n * @param {String} emptyMessage\n * @returns {HTMLLIElement}\n */\nconst renderEmptyListItem = emptyMessage => {\n    /**\n     * @type {HTMLLIElement}\n     */\n    const li = document.createElement('li');\n    li.classList.add('as24-autocomplete__list-item');\n    li.dataset.key = '';\n    li.innerText = emptyMessage;\n    return li;\n};\n\n\n\n/**\n * Renders a collection of raw suggestions to the list\n * @param {string} emptyMessage\n * @param {HTMLUListElement} list\n * @param {HTMLInputElement} labelInput\n * @returns {Function}\n */\nconst renderList = (emptyMessage, list, labelInput) =>\n    /**\n     * @param {Array<Suggestion>} suggestions\n     */\n    suggestions => {\n        list.innerHTML = '';\n        const df = document.createDocumentFragment();\n\n        (suggestions.length\n            ? suggestions.map(renderLI(labelInput.value))\n            : [renderEmptyListItem(emptyMessage)]\n        ).forEach(appendTo(df));\n\n        list.classList[suggestions.length ? 'remove' : 'add']('as24-autocomplete__list--empty');\n        appendTo(list)(df);\n        showList(list);\n    };\n\n\n\n/**\n * Fetch data according to user input and renders the list\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} labelInput\n * @param {HTMLUListElement} list\n * @param {String} emptyMessage\n * @param {Element} rootElement\n * @returns {function}\n */\nconst fetchList = (dataSource, labelInput, list, emptyMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        e.stopPropagation();\n        rootElement.classList.add('as24-autocomplete--active');\n        dataSource.fetchItems(labelInput.value).then(renderList(emptyMessage, list, labelInput));\n    };\n\n\n/**\n *\n * @param {string} eventName\n * @param {HTMLInputElement} el\n */\nconst triggerChangeEvent = (eventName, el) => {\n    const evt = document.createEvent('Event');\n    evt.initEvent(eventName, true, true);\n    el.dispatchEvent(evt);\n};\n\n\n/**\n * This is what happens after the user selected an item\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLLIElement} li\n * @param {Element} rootElement\n */\nconst selectItem = (valueInput, labelInput, li, rootElement) => {\n    valueInput.value = li.dataset.key;\n    labelInput.value = li.innerText;\n    triggerChangeEvent('change', valueInput);\n    dirtifyInput(rootElement);\n};\n\n\n\n/**\n * This is what happens then user clicked in the suggestion item\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLUListElement} list\n * @param {HTMLElement} rootElement\n */\nconst onItemClicked = (valueInput, labelInput, list, rootElement) => e => {\n    selectItem(valueInput, labelInput, closestByClassName('as24-autocomplete__list-item')(e.target), rootElement);\n    rootElement.classList.add('as24-autocomplete--user-input');\n    hideList(list, rootElement)(e);\n};\n\n\n\n/**\n * When mouse goes over the suggestion item\n * @param {HTMLUListElement} list\n * @return {function} a function that accepts an event\n */\nconst onItemMouseOver = list =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        e.stopPropagation();\n        const preselected = $('.as24-autocomplete__list-item--preselected', list);\n        if (e.target.tagName === 'LI') {\n            if (preselected) {\n                preselected.classList.remove('as24-autocomplete__list-item--preselected');\n            }\n            e.target.classList.add('as24-autocomplete__list-item--preselected');\n        }\n    };\n\n\n\n/**\n * Handles key down event from the label input\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLUListElement} list\n * @param {string} emptyListMessage\n * @param {Element} rootElement\n * @return {function}\n */\nconst onKeyDown = (dataSource, valueInput, labelInput, list, emptyListMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        if (e.target === labelInput) {\n            if ([38, 40, 27].indexOf(e.which) >= 0) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            if (e.which === 9) {\n                if (isListVisible(list)) {\n                    selectItem(valueInput, labelInput,\n                        getSelectedSuggestionItem(list),\n                        rootElement\n                    );\n                    hideList(list, rootElement)(e);\n                }\n            }\n            if (e.which === 38) {\n                return moveSelection(-1, list);\n            }\n            if (e.which === 40) {\n                return isListVisible(list)\n                    ? moveSelection(1, list)\n                    : fetchList(dataSource, labelInput, list,\n                        emptyListMessage, rootElement)(e);\n            }\n            if (e.which === 27) {\n                cleanup(valueInput, labelInput, rootElement);\n                return hideList(list, rootElement)();\n            }\n        }\n        return null;\n    };\n\n\n\n/**\n * Handles key up event from the label input\n * @param {DataSource} dataSource\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLUListElement} list\n * @param {string} emptyListMessage\n * @param {Element} rootElement\n * @return {function}\n */\nconst onKeyUp = (dataSource, valueInput, labelInput, list, emptyListMessage, rootElement) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {*}\n     */\n    e => {\n        if (labelInput.value) {\n            dirtifyInput(rootElement);\n        } else {\n            cleanup(valueInput, labelInput, rootElement);\n        }\n        if (isListVisible(list) && (e.which === 13 || e.which === 9)) {\n            e.stopPropagation();\n            e.preventDefault();\n            selectItem(valueInput, labelInput, getSelectedSuggestionItem(list), rootElement);\n            hideList(list, rootElement)();\n            return false;\n        }\n        if ([38, 40, 27].indexOf(e.which) === -1) {\n            e.stopPropagation();\n            return fetchList(dataSource, labelInput, list, emptyListMessage, rootElement)(e);\n        }\n        return null;\n    };\n\n\n\n/**\n * Handles the click on the arrow icon\n * @param {HTMLUListElement} list\n * @param {HTMLInputElement} userFacingInput\n * @param {Function} fetchListFn\n * @param {Element} root\n * @returns {function}\n */\nconst handleArrowClick = (list, userFacingInput, fetchListFn, root) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        e.stopPropagation();\n        if (!userFacingInput.disabled) {\n            if (isListVisible(list)) {\n                hideList(list, root)(e);\n            } else {\n                userFacingInput.focus();\n                fetchListFn(e);\n            }\n        }\n    };\n\n\n\n/**\n * Reset the state of the component\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {HTMLElement} root\n */\nconst reset = (valueInput, labelInput, root) => {\n    cleanup(valueInput, labelInput, root);\n    triggerChangeEvent('change', valueInput);\n    return true;\n};\n\n\n\n/**\n * Handles the click on the arrow icon\n * @param {HTMLUListElement} list\n * @param {HTMLInputElement} valueInput\n * @param {HTMLInputElement} labelInput\n * @param {Function} fetchListFn\n * @param {Element} root\n * @returns {function}\n */\nconst handleCrossClick = (list, valueInput, labelInput, fetchListFn, root) =>\n    /**\n     * @function\n     * @param {DOMEvent} e\n     * @return {undefined}\n     */\n    e => {\n        reset(valueInput, labelInput, root);\n        if (isListVisible(list)) {\n            fetchListFn(e);\n            labelInput.focus();\n        }\n    };\n\n\n\n/**\n * Returns promised Suggestion by key\n * @param  {DataSource} dataSource\n * @param  {string} keyValue\n * @return {Promise.<Suggestion>}\n */\nconst getInitialValueByKey = (dataSource, keyValue) =>\n    dataSource.getSuggestionByKey(keyValue);\n\n\n\n/**\n * When the custom tag has been attached to DOM\n * @this HTMLElement\n */\nfunction elementAttached() {\n    /**\n     * The as24-autocomplete DOM element\n     * @type {HTMLElement}\n     */\n    const root = this;\n\n    /**\n     * The message about no items has been found\n     * @type {string}\n     */\n    const emptyListMessage = root.getAttribute('empty-list-message') || '---';\n\n    /**\n     * The id of the data-source element\n     * @type {string}\n     */\n    const dataSourceName = root.getAttribute('data-source');\n\n    if (!dataSourceName) {\n        throw new Error('The data source is missing');\n    }\n\n    /**\n     * The input with which the user can interact\n     * @type {HTMLInputElement}\n     */\n    const userFacingInput = $('[type=text]', root);\n\n    /**\n     * Hidden input in which we actually set the value\n     * @type {HTMLInputElement}\n     */\n    const valueInput = $('[type=hidden]', root);\n\n    /**\n     * The UL-element that represents the suggestion list\n     * @type {HTMLUListElement}\n     */\n    const list = $('.as24-autocomplete__list', root);\n\n    /**\n     * The arrow down icon\n     * @type {HTMLDivElement}\n     */\n    const iconDropdown = $('.as24-autocomplete__icon-dropdown', root);\n\n    /**\n     * The cross-arrow icon\n     * @type {*}\n     */\n    const iconCross = $('.as24-autocomplete__icon-cross', root);\n\n    /**\n     * DataSource element\n     * @type {DataSource}\n     */\n    const dataSource = $(`#${dataSourceName}`, document);\n\n    if (!dataSource) {\n        throw new Error(`The DataSource ${dataSourceName} has not been found`);\n    }\n\n    /**\n     * The function that takes an Event and does call to DataSource\n     * @type {Function}\n     */\n    const fetchListFn = fetchList(dataSource, userFacingInput, list, emptyListMessage, root);\n\n    setTimeout(() => {\n        if (valueInput.value) {\n            getInitialValueByKey(dataSource, valueInput.value)\n                .then(suggestion => {\n                    if (suggestion) {\n                        userFacingInput.value = suggestion.value;\n                        dirtifyInput(root);\n                    }\n                    return true;\n                });\n        }\n    });\n\n    if (iconDropdown) {\n        on('click', handleArrowClick(list, userFacingInput, fetchListFn, this), iconDropdown);\n    }\n\n    if (iconCross) {\n        on('click', handleCrossClick(list, valueInput, userFacingInput, fetchListFn, this), iconCross);\n    }\n\n    on('click', hideList(list, root), document);\n    on('click', fetchListFn, userFacingInput);\n    on('click', onItemClicked(valueInput, userFacingInput, list, root), list);\n    on('keyup', onKeyUp(dataSource, valueInput, userFacingInput, list, emptyListMessage, root), userFacingInput, true);\n    on('keydown', onKeyDown(dataSource, valueInput, userFacingInput, list, emptyListMessage, root), window, true);\n    on('mouseover', onItemMouseOver(list), list, true);\n}\n\n\n\nfunction elementDetached() { }\n\n\n\nexport default function() {\n    try {\n        return document.registerElement('as24-autocomplete', {\n            prototype: Object.assign(\n                Object.create(HTMLElement.prototype, {\n                    attachedCallback: { value: elementAttached },\n                    detachedCallback: { value: elementDetached },\n                    attributeChangedCallback: {\n                        value() {}\n                    }\n                }),\n                /**\n                 * Public API\n                 */\n                {\n                    /**\n                     * Returns the selected value\n                     * @this {HTMLElement}\n                     */\n                    selectedValue() {\n                        return $('[type=hidden]', this).value;\n                    },\n                    /**\n                     * Returns what user has written\n                     * @this {HTMLElement}\n                     */\n                    userQuery() {\n                        return $('[type=text]', this).value;\n                    },\n                    /**\n                     * returns the bounded data source element\n                     * @this {HTMLElement}\n                     */\n                    dataSourceElement() {\n                        return document.getElementById(this.getAttribute('data-source'));\n                    },\n                    /**\n                     * Resets the component\n                     * @this {HTMLElement}\n                     */\n                    reset() {\n                        /** @type {HTMLInputElement} */\n                        const userFacingInput = $('[type=text]', this);\n\n                        /** @type {HTMLInputElement} */\n                        const valueInput = $('[type=hidden]', this);\n\n                        return reset(valueInput, userFacingInput, this);\n                    },\n                    /**\n                     * Resets the component\n                     * @param {Boolean} flag\n                     * @this {HTMLElement}\n                     */\n                    toggleDisabled(flag) {\n                        /** @type {HTMLInputElement} */\n                        $('[type=text]', this).disabled = flag;\n                        return true;\n                    }\n                }\n            )\n        });\n    } catch (e) {\n        if (window && window.console) {\n            window.console.warn('Failed to register CustomElement \"as24-autocomplete\".', e);\n            return null;\n        }\n    }\n    return true;\n}\n","/**\n * @class\n * @typedef Suggestion\n */\nclass Suggestion {\n    /**\n     * @property {string} key\n     * @property {string} value\n     */\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n\n    toString() {\n        return `Suggestion(${this.key}: ${this.value})`;\n    }\n}\n\n/**\n * Test the string against item's value\\\n * @param {RegExp} regexp\n * @returns {function}\n */\nconst valuePredicate = (regexp) =>\n    /**\n     * @param {Suggestion} item\n     */\n    item =>\n        item.value.match(regexp) !== null;\n\n\n/**\n * @class\n * @typedef DataSource\n */\nclass DataSource extends HTMLElement {\n    /**\n     * @param {string} queryString\n     * @return {Promise.<Array<Suggestion>>}\n     */\n    fetchItems(queryString) {\n        return new Promise(res => {\n            const keyVals = this.extractKeyValues();\n            const startingWith = keyVals\n                .filter(valuePredicate(new RegExp(`^${queryString}`, 'ig')));\n            const theRestContaining = keyVals\n                .filter(x => startingWith.indexOf(x) === -1)\n                .filter(valuePredicate(new RegExp(`${queryString}`, 'ig')));\n            return res(startingWith.concat(theRestContaining));\n        });\n    }\n\n    /**\n     * @param {string} keyValue\n     * @return {Promise.<Suggestion>}\n     */\n    getSuggestionByKey(keyValue) {\n        return new Promise((res, rej) => {\n            const items = this.extractKeyValues();\n            if (keyValue && items) {\n                return res(items.filter(item => item.key === keyValue)[0]);\n            }\n            return rej(null);\n        });\n    }\n\n    /**\n     * Extracts a list of objects like { key:string, value:string }\n     * @returns {Array<{key:string, value:string}>}\n     */\n    extractKeyValues() {\n        return Array.prototype.slice.call(this.querySelectorAll('item')).map(tag =>\n            new Suggestion(tag.getAttribute('key'), tag.getAttribute('value'))\n        );\n    }\n}\n\nexport default function() {\n    try {\n        return document.registerElement('as24-tags-data-source', DataSource);\n    } catch (e) {\n        return null;\n    }\n}\n","import input from './as24-autocomplete-input';\nimport tagsDataSource from './data-sources/tags-data-source';\n\nexport default (function init() {\n    const inputCtr = input();\n    const tagsDataSourceCtr = tagsDataSource();\n    return { inputCtr, tagsDataSourceCtr };\n}());\n"],"names":["closestByClassName","elem","classList","contains","className","parentElement","$","selector","root","querySelector","on","event","cb","el","capturing","addEventListener","appendTo","appendChild","child","target","getSelectedSuggestionItem","list","followSelectedItem","selected","listHeight","getBoundingClientRect","height","selectedTop","offsetTop","selectedHeight","offsetHeight","scrollTop","moveSelection","dir","next","currActiveItem","nextActiveItem","remove","add","showList","hideList","rootElement","isListVisible","cleanup","valueInput","labelInput","value","isDirty","dirtifyInput","renderLI","li","document","createElement","dataset","key","item","innerHTML","replace","RegExp","searchStr","renderEmptyListItem","innerText","emptyMessage","renderList","df","createDocumentFragment","suggestions","length","map","forEach","fetchList","dataSource","stopPropagation","fetchItems","then","triggerChangeEvent","eventName","evt","createEvent","initEvent","dispatchEvent","selectItem","onItemClicked","e","onItemMouseOver","preselected","tagName","onKeyDown","emptyListMessage","indexOf","which","preventDefault","onKeyUp","handleArrowClick","userFacingInput","fetchListFn","disabled","focus","reset","handleCrossClick","getInitialValueByKey","keyValue","getSuggestionByKey","elementAttached","getAttribute","dataSourceName","Error","iconDropdown","iconCross","suggestion","window","elementDetached","registerElement","Object","assign","create","HTMLElement","prototype","getElementById","flag","console","warn","Suggestion","valuePredicate","regexp","match","DataSource","queryString","Promise","keyVals","extractKeyValues","startingWith","filter","theRestContaining","x","res","concat","rej","items","Array","slice","call","querySelectorAll","tag","init","inputCtr","input","tagsDataSourceCtr","tagsDataSource"],"mappings":"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"}